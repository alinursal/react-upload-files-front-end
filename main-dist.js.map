{"version":3,"sources":["main.js"],"names":["apiUrl","upload","form","callback","url","files","_","get","data","FormData","each","file","append","config","onUploadProgress","event","console","log","type","payload","axios","post","then","response","catch","error","KB","MB","TB","betterNumber","input","round","HomeForm","props","state","to","from","message","errors","_onTextChange","bind","_onSubmit","_formValidation","_onFileAdded","_onFileRemove","key","splice","setState","push","isValid","emailAddress","emailRegex","test","fields","validations","errorMessage","length","_isEmail","field","fieldValidations","fieldValidation","err","preventDefault","onUploadBegin","onUploadEvent","fieldName","target","name","fieldValue","value","map","index","classNames","React","Component","HomeUploading","startTime","Date","lastLoaded","speedUpload","loaded","total","percentage","nextProps","currentTime","diffTimeBetweenStartAndCurrent","speedPerOneMilisecond","speedPerSecond","totalFiles","width","onCancel","HomeUploadSent","postId","onSendAnotherFile","Home","componentName","uploadEvent","_renderComponent","delay","timer","ms","clearTimeout","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["//@prepros-prepend main.js\r\n\r\n//only front-end part\r\n\r\nconst apiUrl = 'http://localhost';\r\n\r\nconst upload = (form, callback = () => {}) => {\r\n\r\n    const url = `${apiUrl}/upload`;\r\n\r\n    let files = _.get(form, 'files', []);\r\n\r\n    let data = new FormData();\r\n\r\n    _.each(files, (file) => {\r\n        data.append('files', file);\r\n    });\r\n\r\n    data.append('to', _.get(form, 'to'));\r\n    data.append('from', _.get(form, 'from'));\r\n    data.append('message', _.get(form, 'message'));\r\n\r\n    const config = {\r\n\r\n        onUploadProgress: (event) => {\r\n\r\n            console.log(\"Upload event\", event);\r\n\r\n            return callback({\r\n                type: 'onUploadProgress',\r\n                payload: event,\r\n            })\r\n        }\r\n    }\r\n\r\n    axios.post(url, data, config).then((response) => {\r\n\r\n        // upload successful.\r\n\r\n        return callback({\r\n\r\n            type: 'success',\r\n            payload: response.data\r\n        })\r\n\r\n    }).catch(function (error) {\r\n\r\n        return callback({\r\n            type: 'success',\r\n            payload: data\r\n        })\r\n\r\n    });\r\n\r\n};\r\n\r\nconst KB = 1024;\r\nconst MB = KB * KB;\r\nconst TB =  KB * KB * KB;\r\n\r\nconst betterNumber = (input, round = true) => {\r\n\r\n    if(input > MB){\r\n        return round ? `${_.round(input/MB)} M` : `${(input/MB)} M` ;\r\n    }\r\n\r\n    if(input > KB){\r\n\r\n        return round ? `${_.round(input/KB)} Kb` : `${(input/KB)} Kb` ;\r\n    }\r\n\r\n}\r\n\r\nclass HomeForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n\r\n            form: {\r\n                files: [],\r\n                to: 'friend@gmail.com',\r\n                from: 'me@gmail.com',\r\n                message: 'Hey there!'\r\n            },\r\n\r\n            errors: {\r\n                to: null,\r\n                from: null,\r\n                message: null,\r\n                files: null,\r\n            }\r\n        };\r\n\r\n\r\n        this._onTextChange = this._onTextChange.bind(this);\r\n        this._onSubmit = this._onSubmit.bind(this);\r\n        this._formValidation = this._formValidation.bind(this);\r\n        this._onFileAdded = this._onFileAdded.bind(this);\r\n        this._onFileRemove = this._onFileRemove.bind(this)\r\n\r\n\r\n    }\r\n\r\n\r\n    _onFileRemove(key) {\r\n        let {files} = this.state.form;\r\n\r\n        files.splice(key, 1);\r\n\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                files: files\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    _onFileAdded(event) {\r\n\r\n        let files = _.get(this.state, 'form.files', []);\r\n\r\n\r\n        _.each(_.get(event, 'target.files', []), (file) => {\r\n\r\n            files.push(file);\r\n\r\n        });\r\n\r\n\r\n\r\n        this.setState({\r\n\r\n            form: {\r\n                ...this.state.form,\r\n                files: files,\r\n            }\r\n        }, () => {\r\n\r\n            this._formValidation(['files'], (isValid) => {\r\n\r\n\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    _isEmail(emailAddress) {\r\n\r\n        const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n\r\n        return emailRegex.test(emailAddress);\r\n    }\r\n\r\n    _formValidation(fields = [], callback = () => {}) {\r\n\r\n        let {form, errors} = this.state;\r\n\r\n\r\n        const validations = {\r\n\r\n            from: [\r\n                {\r\n                    errorMessage: 'From is required.',\r\n                    isValid: () => {\r\n                        return form.from.length;\r\n                    }\r\n                },\r\n                {\r\n                    errorMessage: 'Email is not valid.',\r\n                    isValid: () => {\r\n                        return this._isEmail(form.from);\r\n                    }\r\n                }\r\n            ],\r\n\r\n            to: [\r\n                {\r\n                    errorMessage: 'To is required.',\r\n                    isValid: () => {\r\n                        return form.to.length;\r\n                    }\r\n                },\r\n                {\r\n                    errorMessage: 'Email is not valid.',\r\n                    isValid: () => {\r\n                        return this._isEmail(form.to);\r\n                    }\r\n                }\r\n            ],\r\n            files: [\r\n                {\r\n                    errorMessage: 'File is required.',\r\n                    isValid: () => {\r\n                        return form.files.length;\r\n                    }\r\n                }\r\n            ]\r\n\r\n        }\r\n\r\n        _.each(fields, (field) => {\r\n\r\n\r\n            let fieldValidations = _.get(validations, field, []); // validations[field];\r\n\r\n\r\n            errors[field] = null;\r\n\r\n\r\n            _.each(fieldValidations, (fieldValidation) => {\r\n\r\n\r\n                const isValid = fieldValidation.isValid();\r\n\r\n                if (!isValid) {\r\n                    errors[field] = fieldValidation.errorMessage;\r\n                }\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n        this.setState({\r\n            errors: errors\r\n        }, () => {\r\n\r\n            let isValid = true;\r\n\r\n            _.each(errors, (err) => {\r\n\r\n                if (err !== null) {\r\n                    isValid = false;\r\n                }\r\n            });\r\n            return callback(isValid);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    _onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this._formValidation(['from', 'to', 'files'], (isValid) => {\r\n\r\n\r\n            if(isValid){\r\n                // the form is valid and ready to submit.\r\n\r\n                const data = this.state.form;\r\n\r\n                if(this.props.onUploadBegin){\r\n\r\n                    this.props.onUploadBegin(data);\r\n                }\r\n\r\n                upload(data, (event) => {\r\n\r\n                    if(this.props.onUploadEvent){\r\n\r\n                        this.props.onUploadEvent(event);\r\n\r\n                    }\r\n                })\r\n\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    _onTextChange(event) {\r\n\r\n        let {form} = this.state;\r\n\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n\r\n        form[fieldName] = fieldValue;\r\n        this.setState({form: form});\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {form, errors} = this.state;\r\n        const {files} = form;\r\n\r\n        return (\r\n            <div className={'app-card'}>\r\n                <form onSubmit={this._onSubmit}>\r\n                    <div className={'app-card-header'}>\r\n                        <div className={'app-card-header-inner'}>\r\n\r\n\r\n                            {\r\n\r\n\r\n                                files.length ? <div className={'app-files-selected'}>\r\n\r\n                                    {\r\n                                        files.map((file, index) => {\r\n\r\n                                            return (\r\n                                                <div key={index} className={'app-files-selected-item'}>\r\n                                                    <div className={'filename'}>{file.name}</div>\r\n                                                    <div className={'file-action'}>\r\n                                                        <button onClick={() => this._onFileRemove(index)}\r\n                                                                type={'button'} className={'app-file-remove'}>X\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </div> : null\r\n\r\n\r\n                            }\r\n\r\n                            <div className={classNames('app-file-select-zone', {'error': _.get(errors, 'files')})}>\r\n                                <label htmlFor={'input-file'}>\r\n                                    <input onChange={this._onFileAdded} id={'input-file'} type=\"file\" multiple={true}/>\r\n                                    {\r\n                                        files.length ? <span className={'app-upload-description text-uppercase'}>Add more files</span> :\r\n                                            <span>\r\n                                                <span className={'app-upload-icon'}><i className={'icon-picture-streamline'} /> </span>\r\n                                                <span className={'app-upload-description'}>Drag and drop your files here.</span>\r\n                                            </span>\r\n                                    }\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'app-card-content'}>\r\n                        <div className={'app-card-content-inner'}>\r\n                            <div className={classNames('app-form-item', {'error': _.get(errors, 'to')})}>\r\n                                <label htmlFor={'to'}>Send to</label>\r\n                                <input onChange={this._onTextChange} value={form.to} name={'to'}\r\n                                       placeholder={_.get(errors, 'to') ? _.get(errors, 'to') : 'Email address'} type={'text'} id={'to'}/>\r\n                            </div>\r\n\r\n                            <div className={classNames('app-form-item', {'error': _.get(errors, 'from')})}>\r\n                                <label htmlFor={'from'}>From</label>\r\n                                <input value={_.get(form, 'from')} onChange={this._onTextChange} name={'from'} placeholder={_.get(errors, 'from') ? _.get(errors, 'from') : 'Your email address'}\r\n                                       type={'text'} id={'from'}/>\r\n                            </div>\r\n\r\n\r\n                            <div className={'app-form-item'}>\r\n                                <label htmlFor={'message'}>Message</label>\r\n                                <textarea value={_.get(form, 'message', '')} onChange={this._onTextChange} placeholder={'Add a note (optional)'}\r\n                                          id={'message'} name={'message'}/>\r\n                            </div>\r\n\r\n\r\n                            <div className={'app-form-actions'}>\r\n                                <button type={'submit'} className={'app-button primary'}>Send</button>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass HomeUploading extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            startTime: new Date(),\r\n            lastLoaded: 0,\r\n            speedUpload: 0,\r\n            data: null,\r\n            loaded: 0,\r\n            total: 0,\r\n            percentage: 10,\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {data} = this.props;\r\n\r\n\r\n\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const {event} = nextProps;\r\n\r\n\r\n\r\n        switch (_.get(event, 'type')){\r\n\r\n            case 'onUploadProgress':\r\n\r\n                const loaded = _.get(event,'payload.loaded', 0);\r\n                const total = _.get(event, 'payload.total', 0);\r\n                const percentage = total !== 0 ? (loaded/total) * 100 : 0;\r\n\r\n\r\n                const currentTime = new Date();\r\n                let diffTimeBetweenStartAndCurrent = currentTime - this.state.startTime; // this is miliseconds. not Second.\r\n\r\n\r\n               if(diffTimeBetweenStartAndCurrent === 0){\r\n                   diffTimeBetweenStartAndCurrent = 1;\r\n               }\r\n\r\n               const speedPerOneMilisecond = ((loaded - this.state.lastLoaded) / diffTimeBetweenStartAndCurrent);\r\n\r\n               const speedPerSecond = speedPerOneMilisecond * 1000;\r\n\r\n\r\n\r\n                this.setState({\r\n                    speedUpload: speedPerSecond,\r\n                    startTime: currentTime,\r\n                    lastLoaded: loaded,\r\n                    loaded: loaded,\r\n                    total: total,\r\n                    percentage:percentage\r\n                });\r\n\r\n                break;\r\n\r\n            default:\r\n\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n    render(){\r\n\r\n    const {percentage, data,total,loaded,speedUpload} = this.state;\r\n\r\n    const totalFiles = _.get(data, 'files', []).length;\r\n\r\n        return (\r\n            <div className={'app-card app-card-uploading'}>\r\n\r\n                    <div className={'app-card-content'}>\r\n                        <div className={'app-card-content-inner'}>\r\n\r\n                            <div className={'app-home-uploading'}>\r\n\r\n                                <div className={'app-home-uploading-icon'}>\r\n\r\n                                    <i className={'icon-upload'} />\r\n                                    <h2>Sending...</h2>\r\n                                </div>\r\n\r\n                                <div className={'app-upload-files-total'}>Uploading {totalFiles} files.</div>\r\n\r\n\r\n                                <div className={'app-progress'}>\r\n                                    <span style={{width: `${percentage}%`}} className={'app-progress-bar'} />\r\n                                </div>\r\n\r\n                                <div className={'app-upload-stats'}>\r\n                                    <div className={'app-upload-stats-left'}>{betterNumber(loaded)}/{betterNumber(total)}</div>\r\n                                    <div className={'app-upload-stats-right'}>{betterNumber(speedUpload)}/s</div>\r\n                                </div>\r\n\r\n                                <div className={'app-form-actions'}>\r\n                                    <button onClick={() => {\r\n\r\n                                        if(this.props.onCancel){\r\n                                            this.props.onCancel(true)\r\n                                        }\r\n                                    }} className={'app-upload-cancel-button app-button'} type={'button'}>Cancel</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass HomeUploadSent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const {data} = this.props;\r\n\r\n        console.log(\"Data\", data);\r\n\r\n        const to = _.get(data, 'to');\r\n        const postId = _.get(data, '_id');\r\n        return (\r\n            <div className={'app-card app-card-upload-sent'}>\r\n\r\n                <div className={'app-card-content'}>\r\n                    <div className={'app-card-content-inner'}>\r\n\r\n                        <div className={'app-home-uploading'}>\r\n\r\n                            <div className={'app-home-upload-sent-icon'}>\r\n\r\n                                <i className={'icon-paperplane'} />\r\n                            </div>\r\n\r\n\r\n                            <div className={'app-upload-sent-message app-text-center'}>\r\n                                <h2>Files sent!</h2>\r\n                                <p>We're sent an email to {to} with a download link. The link will expire in 30 days.</p>\r\n                            </div>\r\n                            <div className={'app-upload-sent-actions app-form-actions'}>\r\n                                <button onClick={()=> {\r\n                                    if(this.props.onSendAnotherFile){\r\n                                        this.props.onSendAnotherFile(true);\r\n                                    }\r\n                                }} className={'app-button'} type={'button'}>Send another file</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            componentName: 'HomeForm',\r\n            data: null,\r\n            uploadEvent: null,\r\n        };\r\n\r\n\r\n        this._renderComponent = this._renderComponent.bind(this)\r\n\r\n    }\r\n\r\n\r\n    _renderComponent() {\r\n\r\n        const {componentName, data, uploadEvent} = this.state;\r\n\r\n        var delay = ( function() {\r\n    var timer = 0;\r\n    return function(callback, ms) {\r\n        clearTimeout (timer);\r\n        timer = setTimeout(callback, ms);\r\n    };\r\n})();\r\n\r\n        switch (componentName) {\r\n\r\n            case 'HomeUploading':\r\n\r\n                return <HomeUploading event={uploadEvent} data={data}/>\r\n\r\n\r\n            case 'HomeUploadSent':\r\n\r\n\r\n                return (\r\n                    <HomeUploadSent onSendAnotherFile={() => {\r\n\r\n                        this.setState({\r\n                            componentName: 'HomeForm'\r\n                        })\r\n\r\n                    }} data={data}/>\r\n                );\r\n\r\n\r\n            default:\r\n                return <HomeForm\r\n                    onUploadEvent={(event) => {\r\n\r\n                        let data = this.state.data;\r\n\r\n                        if(_.get(event, 'type') === 'success'){\r\n\r\n                            data = _.get(event, 'payload');\r\n                        }\r\n\r\n                        this.setState(\r\n                            {\r\n                                data: data,\r\n                                uploadEvent: event,\r\n                                componentName: (_.get(event, 'type') === 'success') ? 'HomeUploadSent': this.state.componentName,\r\n                            }\r\n                        );\r\n\r\n\r\n                    }}\r\n\r\n                    onUploadBegin={(data) => {\r\n\r\n                        this.setState({\r\n                            data: data,\r\n                            componentName: 'HomeUploading',\r\n                        });\r\n\r\n                    }}/>\r\n                return\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={'app-container'}>\r\n                <div className={'app-content'}>\r\n                    {this._renderComponent()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));"]}